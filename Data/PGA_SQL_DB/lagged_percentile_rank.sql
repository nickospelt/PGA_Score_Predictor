-- I think that the feature engineering in regard to the percentage change of the players value to the average is a great
-- Percentile doesn't seem to work much better
-- I don't think that necessarily just doing a weight average of them does a good job of capturing the time-series component of it
WITH 
TOURNAMENT_COUNTS AS (
SELECT TOURNAMENT_NAME, COUNT(DISTINCT GIR_PERCENTAGE) * 1.0 AS GIR_COUNT
FROM PLAYER_TOURNAMENT_RESULTS_V2
GROUP BY 1
),
PLAYER_STATS AS (
SELECT TOURNAMENT_NAME AS P_TOURN_NAME, PLAYER_NAME, 
    GIR_PERCENTAGE AS P_GIR, SCRAMBLING_PERCENTAGE AS P_SCRAMB,
    R1_PUTTS AS P_R1_PUTT, R2_PUTTS AS P_R2_PUTT,
    R1_SCORE AS P_R1_SCR, R2_SCORE AS P_R2_SCR, R3_SCORE AS P_R3_SCR, R4_SCORE AS P_R4_SCR
FROM PLAYER_TOURNAMENT_RESULTS_V2
),
PLAYER_PERCENTILE_RANKS AS (
SELECT PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME, P_GIR,
    SUM(CASE WHEN GIR_PERCENTAGE <= P_GIR THEN 1 ELSE 0 END) * 100.0 / GIR_COUNT AS GIR_PER_RANK
FROM PLAYER_TOURNAMENT_RESULTS_V2 
    INNER JOIN PLAYER_STATS ON 
        PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME = PLAYER_STATS.P_TOURN_NAME AND
        PLAYER_TOURNAMENT_RESULTS_V2.PLAYER_NAME = PLAYER_STATS.PLAYER_NAME
    INNER JOIN TOURNAMENT_COUNTS ON
        PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME = TOURNAMENT_COUNTS.TOURNAMENT_NAME
GROUP BY 1,2
)

SELECT *
FROM PLAYER_PERCENTILE_RANKS
ORDER BY TOURNAMENT_NAME