WITH 
TOURNAMENT_AVGS AS (
SELECT TOURNAMENT_NAME,
    AVG(R1_AVG_SCORE - PAR) AS R1_AVG_SCORE,
    AVG(R1_PUTTS) AS AVG_R1_PUTTS, 
    AVG(GIR_PERCENTAGE) AS AVG_GIR,
    AVG(SCRAMBLING_PERCENTAGE) AS AVG_SCRAMB,
    AVG(TOTAL_DRIVING_DISTANCE) AS AVG_DRIVE_DIST,
    AVG(FIR_PERCENTAGE) AS AVG_FIR
FROM PLAYER_TOURNAMENT_RESULTS_V2
GROUP BY 1
),
PLAYER_RATIOS AS (
SELECT PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME, TOURNAMENT_DATE, PLAYER_NAME,
    (R1_SCORE - PAR), TOURNAMENT_AVGS.R1_AVG_SCORE, ((R1_SCORE - PAR) - TOURNAMENT_AVGS.R1_AVG_SCORE) / (TOURNAMENT_AVGS.R1_AVG_SCORE) AS R1_SCORE_RATIO,
    SCRAMBLING_PERCENTAGE, AVG_SCRAMB,(SCRAMBLING_PERCENTAGE - AVG_SCRAMB) / (AVG_SCRAMB) AS SCRAMB_RATIO,
    GIR_PERCENTAGE, AVG_GIR, (GIR_PERCENTAGE - AVG_GIR) / (AVG_GIR) AS GIR_RATIO,
    FIR_PERCENTAGE, AVG_FIR, (FIR_PERCENTAGE - AVG_FIR) / (AVG_FIR) AS FIR_RATIO,
    TOTAL_DRIVING_DISTANCE, AVG_DRIVE_DIST, (TOTAL_DRIVING_DISTANCE - AVG_DRIVE_DIST) / (AVG_DRIVE_DIST) AS DRIVE_DIST_RATIO, 
    R1_PUTTS, AVG_R1_PUTTS, (R1_PUTTS - AVG_R1_PUTTS) / (AVG_R1_PUTTS) AS R1_PUTT_RATIO
FROM PLAYER_TOURNAMENT_RESULTS_V2 LEFT JOIN TOURNAMENT_AVGS ON PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME = TOURNAMENT_AVGS.TOURNAMENT_NAME
),
LAGGED_RATIOS AS (
SELECT TOURNAMENT_NAME, TOURNAMENT_DATE, PLAYER_NAME,
    LAG(R1_SCORE_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_R1_SCORE_RATIO,
    LAG(R1_SCORE_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_R1_SCORE_RATIO,
    LAG(R1_SCORE_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_R1_SCORE_RATIO,
    LAG(SCRAMB_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_SCRAMB_RATIO,
    LAG(SCRAMB_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_SCRAMB_RATIO,
    LAG(SCRAMB_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_SCRAMB_RATIO,
    LAG(DRIVE_DIST_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_DRIVE_DIST_RATIO,
    LAG(DRIVE_DIST_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_DRIVE_DIST_RATIO,
    LAG(DRIVE_DIST_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_DRIVE_DIST_RATIO,
    LAG(FIR_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_FIR_RATIO,
    LAG(FIR_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_FIR_RATIO,
    LAG(FIR_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_FIR_RATIO,
    LAG(GIR_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_GIR_RATIO,
    LAG(GIR_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_GIR_RATIO,
    LAG(GIR_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_GIR_RATIO,
    LAG(R1_PUTT_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_R1_PUTT_RATIO,
    LAG(R1_PUTT_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_R1_PUTT_RATIO,
    LAG(R1_PUTT_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_R1_PUTT_RATIO
FROM PLAYER_RATIOS
),
WEIGHTS AS (
 SELECT *,
     (CASE
         WHEN P1_GIR_RATIO IS NULL THEN NULL
         WHEN P2_GIR_RATIO IS NULL THEN 1
         WHEN P3_GIR_RATIO IS NULL THEN 0.6
         ELSE 0.5
     END) AS WEIGHT_1,
     (CASE
         WHEN P1_GIR_RATIO IS NULL THEN NULL
         WHEN P2_GIR_RATIO IS NULL THEN 0
         WHEN P3_GIR_RATIO IS NULL THEN 0.4
         ELSE 0.3
     END) AS WEIGHT_2,
     (CASE
         WHEN P1_GIR_RATIO IS NULL THEN NULL
         WHEN P2_GIR_RATIO IS NULL THEN 0
         WHEN P3_GIR_RATIO IS NULL THEN 0
         ELSE 0.2
     END) AS WEIGHT_3
 FROM LAGGED_RATIOS
)

-- This weighted average computation is where it is not clear what the best way is to handle the time series component of the player statistics
SELECT WEIGHTS.TOURNAMENT_NAME, WEIGHTS.TOURNAMENT_DATE, WEIGHTS.PLAYER_NAME, PLAYER_ID,
    (CASE 
         WHEN UPPER(WEIGHTS.TOURNAMENT_NAME) LIKE "%MASTERS%" THEN 1.0
         WHEN UPPER(WEIGHTS.TOURNAMENT_NAME) LIKE "%U.S. OPEN%" THEN 2.0
         WHEN UPPER(WEIGHTS.TOURNAMENT_NAME) LIKE "%THE OPEN%" THEN 3.0
         WHEN UPPER(WEIGHTS.TOURNAMENT_NAME) LIKE "%PGA%" THEN 4.0
         WHEN UPPER(WEIGHTS.TOURNAMENT_NAME) LIKE "%PLAYERS%" THEN 5.0
     END) AS TOURNAMENT_F,
    R1_TEMP, R1_PRECIP, R1_WIND_SPEED, R1_WIND_DIRECT,
    ELEVATION, PAR, LENGTH,
    (CASE
        WHEN WEIGHT_1 IS NULL THEN NULL
        ELSE IFNULL(P1_R1_SCORE_RATIO, 0) * WEIGHT_1 + IFNULL(P2_R1_SCORE_RATIO, 0) * WEIGHT_2 + IFNULL(P3_R1_SCORE_RATIO, 0) * WEIGHT_3
    END) AS R1_SCORE_RATIO,
    (CASE
        WHEN WEIGHT_1 IS NULL THEN NULL
        ELSE IFNULL(P1_SCRAMB_RATIO, 0) * WEIGHT_1 + IFNULL(P2_SCRAMB_RATIO, 0) * WEIGHT_2 + IFNULL(P3_SCRAMB_RATIO, 0) * WEIGHT_3
    END) AS SCRAMB_RATIO,
    (CASE
        WHEN WEIGHT_1 IS NULL THEN NULL
        ELSE IFNULL(P1_DRIVE_DIST_RATIO, 0) * WEIGHT_1 + IFNULL(P2_DRIVE_DIST_RATIO, 0) * WEIGHT_2 + IFNULL(P3_DRIVE_DIST_RATIO, 0) * WEIGHT_3
    END) AS DRIVE_DIST_RATIO,
    (CASE
        WHEN WEIGHT_1 IS NULL THEN NULL
        ELSE IFNULL(P1_FIR_RATIO, 0) * WEIGHT_1 + IFNULL(P2_FIR_RATIO, 0) * WEIGHT_2 + IFNULL(P3_FIR_RATIO, 0) * WEIGHT_3
    END) AS FIR_RATIO,
    (CASE
        WHEN WEIGHT_1 IS NULL THEN NULL
        ELSE IFNULL(P1_GIR_RATIO, 0) * WEIGHT_1 + IFNULL(P2_GIR_RATIO, 0) * WEIGHT_2 + IFNULL(P3_GIR_RATIO, 0) * WEIGHT_3
    END) AS GIR_RATIO,
    (CASE
        WHEN WEIGHT_1 IS NULL THEN NULL
        ELSE IFNULL(P1_R1_PUTT_RATIO, 0) * WEIGHT_1 + IFNULL(P2_R1_PUTT_RATIO, 0) * WEIGHT_2 + IFNULL(P3_R1_PUTT_RATIO, 0) * WEIGHT_3
    END) AS R1_PUTT_RATIO,
    R1_SCORE
FROM WEIGHTS INNER JOIN PLAYER_TOURNAMENT_RESULTS_V2 
    ON WEIGHTS.TOURNAMENT_NAME = PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME AND WEIGHTS.PLAYER_NAME = PLAYER_TOURNAMENT_RESULTS_V2.PLAYER_NAME
WHERE GIR_RATIO IS NOT NULL
ORDER BY WEIGHTS.PLAYER_NAME, WEIGHTS.TOURNAMENT_DATE