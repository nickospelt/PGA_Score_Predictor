-- I think that the feature engineering in regard to the percentage change of the players value to the average is a great
-- Percentile may work better because not losing information due to the sign (+/-)
-- I don't think that necessarily just doing a weight average of them does a good job of capturing the time-series component of it
WITH 
TOURNAMENT_AVGS AS (
SELECT TOURNAMENT_NAME, AVG(R1_PUTTS) AS AVG_R1_PUTTS, AVG(R2_PUTTS) AS AVG_R2_PUTTS, AVG(GIR_PERCENTAGE) AS AVG_GIR
FROM PLAYER_TOURNAMENT_RESULTS_V2
GROUP BY 1
),
PLAYER_RATIOS AS (
SELECT PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME, TOURNAMENT_DATE, PLAYER_NAME, GIR_PERCENTAGE, AVG_GIR, (GIR_PERCENTAGE - AVG_GIR) / (AVG_GIR) AS GIR_RATIO, R1_PUTTS, AVG_R1_PUTTS, (R1_PUTTS - AVG_R1_PUTTS) / (AVG_R1_PUTTS) AS R1_PUTT_RATIO, R2_PUTTS, AVG_R2_PUTTS, (R2_PUTTS - AVG_R2_PUTTS) / (R2_PUTTS) AS R2_PUTT_RATIO
FROM PLAYER_TOURNAMENT_RESULTS_V2 LEFT JOIN TOURNAMENT_AVGS ON PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME = TOURNAMENT_AVGS.TOURNAMENT_NAME
),
LAGGED_RATIOS AS (
SELECT TOURNAMENT_NAME, TOURNAMENT_DATE, PLAYER_NAME,
    LAG(GIR_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_GIR_RATIO,
    LAG(GIR_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_GIR_RATIO,
    LAG(GIR_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_GIR_RATIO,
    LAG(R1_PUTT_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_R1_PUTT_RATIO,
    LAG(R1_PUTT_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_R1_PUTT_RATIO,
    LAG(R1_PUTT_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_R1_PUTT_RATIO,
    LAG(R2_PUTT_RATIO) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P1_R2_PUTT_RATIO,
    LAG(R2_PUTT_RATIO, 2) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P2_R2_PUTT_RATIO,
    LAG(R2_PUTT_RATIO, 3) OVER (PARTITION BY PLAYER_NAME ORDER BY TOURNAMENT_DATE) AS P3_R2_PUTT_RATIO
FROM PLAYER_RATIOS
)

-- This weighted average computation is where it is not clear what the best way is to handle the time series component of the player statistics
SELECT PLAYER_RATIOS.TOURNAMENT_NAME, PLAYER_RATIOS.TOURNAMENT_DATE, PLAYER_RATIOS.PLAYER_NAME,
    P1_GIR_RATIO * 0.5 + P2_GIR_RATIO * 0.3 + P3_GIR_RATIO * 0.2 AS GIR_RATIO, PLAYER_RATIOS.GIR_RATIO AS ACT_GIR_RATIO, 
    P1_R1_PUTT_RATIO * 0.5 + P2_R1_PUTT_RATIO * 0.3 + P3_R1_PUTT_RATIO * 0.2 AS R1_PUTT_RATIO, PLAYER_RATIOS.R1_PUTT_RATIO AS ACT_R1_PUTT_RATIO,
    P1_R2_PUTT_RATIO * 0.5 + P2_R2_PUTT_RATIO * 0.3 + P3_R2_PUTT_RATIO * 0.2 AS R2_PUTT_RATIO, PLAYER_RATIOS.R2_PUTT_RATIO AS ACT_R2_PUTT_RATIO,
    R1_SCORE, R2_SCORE, (R1_SCORE + R2_SCORE + R3_SCORE + R4_SCORE)
FROM LAGGED_RATIOS INNER JOIN PLAYER_RATIOS ON LAGGED_RATIOS.TOURNAMENT_NAME = PLAYER_RATIOS.TOURNAMENT_NAME AND LAGGED_RATIOS.PLAYER_NAME = PLAYER_RATIOS.PLAYER_NAME
    INNER JOIN PLAYER_TOURNAMENT_RESULTS_V2 ON LAGGED_RATIOS.TOURNAMENT_NAME = PLAYER_TOURNAMENT_RESULTS_V2.TOURNAMENT_NAME AND LAGGED_RATIOS.PLAYER_NAME = PLAYER_TOURNAMENT_RESULTS_V2.PLAYER_NAME
ORDER BY PLAYER_RATIOS.PLAYER_NAME, PLAYER_RATIOS.TOURNAMENT_DATE